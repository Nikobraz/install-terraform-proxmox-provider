- name: Install make
  package:
    name: make=4.3
    state: present

- name: Clone git
  ignore_errors: yes
  git:
    repo: https://github.com/Telmate/terraform-provider-proxmox.git
    dest: /tmp/terraform-provider-proxmox
    version: master
    clone: yes
    update: yes

- name: chmod 777
  become: yes
  file:
    path: /tmp/terraform-provider-proxmox
    mode: '0777'
    state: directory
    recurse: yes

- name: Download Golang
  get_url:
    url: https://golang.org/dl/go1.15.2.linux-amd64.tar.gz
    dest: /tmp/go1.15.2.linux-amd64.tar.gz

- name: Install Golang
  unarchive:
    src: /tmp/go1.15.2.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes

- name: Write export to .bashrc
  lineinfile:
    path: /etc/profile.d/go.sh
    line: export PATH=$PATH:/usr/local/go/bin
    state: present
    create: yes

- name: Export
  command: /bin/bash -c 'source /etc/profile.d/go.sh'
  register: result
  changed_when: "result.rc != 2"

- name: Install dependencies
  command: /usr/local/go/bin/go install github.com/Telmate/terraform-provider-proxmox/cmd/terraform-provider-proxmox
  args:
    chdir: /tmp/terraform-provider-proxmox/
  register: result
  changed_when: "result.rc != 2"

- name: Install dependencies
  command: /usr/local/go/bin/go install github.com/Telmate/terraform-provider-proxmox/cmd/terraform-provisioner-proxmox
  args:
    chdir: /tmp/terraform-provider-proxmox/
  register: result
  changed_when: "result.rc != 2"

- name: Compile terraform-provider-proxmox
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/go/bin
  command: /bin/make
  args:
    chdir: /tmp/terraform-provider-proxmox/
  register: result
  changed_when: "result.rc != 2"

- name: Create a directory if it does not exist
  file:
    path: ~/.terraform.d/plugins/local/provider/proxmox/1.0.0/linux_amd64/
    state: directory
    mode: '0755'

- name: Copy terraform-provider-proxmox
  copy:
    src: /tmp/terraform-provider-proxmox/bin/terraform-provider-proxmox
    dest: ~/.terraform.d/plugins/local/provider/proxmox/1.0.0/linux_amd64/terraform-provider-proxmox
    remote_src: yes

- name: Copy terraform-provisioner-proxmox
  copy:
    src: /tmp/terraform-provider-proxmox/bin/terraform-provisioner-proxmox
    dest: ~/.terraform.d/plugins/local/provider/proxmox/1.0.0/linux_amd64/terraform-provisioner-proxmox
    remote_src: yes

- block:
    - name: Add Terraform GPG Key
      command: /bin/bash -c 'curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -'

    - name: Work out the distribution
      command: lsb_release -sc
      register: result

    - name: Add Terraform Repo Ubuntu
      apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com "{{ result.stdout }}" main
        state: present
        update_cache: no

    - name: Apt update
      become: yes
      apt:
        update_cache: yes

    - name: Install Terraform Ubuntu
      become: yes
      apt:
        name: terraform=0.13
        state: present
        force_apt_get: yes
  when: ansible_distribution == "Ubuntu"

- block:
    - name: Add Terraform Repo Centos
      command: yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo

    - name: Install Terraform
      become: yes
      package:
        name: terraform=0.13
        state: present
  when: ansible_distribution == "CentOS"

- name: Enable autocomplete
  ignore_errors: yes
  command: terraform -install-autocomplete
  register: result
  changed_when: "result.rc != 2"
